openapi: 3.0.0
info:
  title: REST API DOC
  description: |
    REST API 문서
  version: 1.0.0
servers:
  - url: 'http://15.164.165.160/api'

paths:
# === User ======================================================================
  /users/userInfo/userMe:
    get:
      security:
        - BearerAuth: []
      tags:
        - User
      summary: 로그인된 유저 자신의 정보
      description: 로그인도니 유저 자신의 정보를 가져온다.</br>
                  토큰이 유효하지 않으면 오류를 뱉는다.
      responses:
        '200':
          $ref: '#/components/responses/200'

  /users/userInfo/token:
    get:
      security:
        - BearerAuth: []
      tags:
        - User
      summary: 로그인 확인하는 API
      description: 만료기간 reset 되며 새로운 토큰이 발행됨.</br> BearerAuth 에 토큰이 무조건 존재해야지 검증이 가능함.
      responses:
        '200':
          $ref: '#/components/responses/200'

  /users/exist:
    post:
      tags:
        - User
      summary: 유저가 존재하는지 확인(로그인 시 무조건 실행해야 함)
      description: 유저가 존재하면 isExist 가 true, 존재하지 않으면 false</br>
                  isExist->true 면 access_token 을 뱉어주는데 이 access_token 은 BearerAuth 에서 사용될 토큰임</br>
                  isExist->false 면 access_token 을 주지 않고 users/add 라우트를 실행해야 함
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                login_type:
                  type: integer
                  enum:
                    - 1
                    - 2
                  description: 1 -> naver</br>2 -> kakao
                access_token:
                  type: string
                  description: 로그인 버튼 누르고 나오는 url 에서 받아오는 access_token 임
      responses:
        '200':
          $ref: '#/components/responses/200'

  /users/add:
    post:
      tags:
        - User
      summary: exist api 요청 이후 수행하는 등록 api
      description: /users/exist 에서 isExist 가 false 면 실행되는 api 이다.</br>
                  여기서 나머지 필드를 다 채우고 정확한 값을 요청하면 status 200 과</br>
                  BearerAuth 에서 사용된 accescc_token 을 함께 띄워준다.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                login_type:
                  type: integer
                  enum:
                    - 1
                    - 2
                  default: 2
                  description: 1 -> naver</br>2 -> kakao
                access_token:
                  type: string
                  description: /users/isExist 의 body 에서 받아온 token
                phone:
                  type: string
                  description: 회원의 전화번호
                name:
                  type: string
                  description: 회원의 이름
                realty_name:
                  type: string
                  description: 회원의 소속 업체 이름
                realty_address:
                  type: string
                  description: 회원의 소속 업체 주소
                realty_owner_name:
                  type: string
                  description: 회원의 소속 업체 대표 이름
                realty_owner_phone:
                  type: string
                  description: 회원의 소속 업체 대표
              required:
                - login_type
                - access_token
                - phone
                - name
                - realty_name
                - realty_address
                - realty_owner_name
                - realty_owner_phone

      responses:
        '200':
          $ref: '#/components/responses/200'


  /users/userinfo/show:
    get:
      security:
        - BearerAuth: []
      tags:
        - User
      summary: 유저 목록
      parameters:
        - in: query
          name: auth
          schema:
            type: string
            enum:
              - noFilter
              - admin
              - common
          description: noFilter (default)
        - in: query
          name: page
          schema:
            type: integer
          description: 0부터 시작
          required: true
        - in: query
          name: order
          schema:
            type: string
            enum: ['desc', 'asc']
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  result:
                    user_id: 유저 ID
                    Auth: 권한
                    phone: 폰 번호
                    name: 이름
                    realty_name: 부동산 이름
                    realty_address: 부동산 주소
                    realty_owner_name: 부동산 대표 이름
                    realty_owner_phone: 부동산 대표 전화번호
                    registAt: 등록일

  /users/userInfo/search:
    get:
      security:
        - BearerAuth: []
      tags:
        - User
      summary: 필터를 통한 유저검색
      description: 필터 -> 유저이름, 부동산이름, 부동산대표이름
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: 검색어
          required: true
        - in: query
          name: order
          schema:
            type: string
            enum:
              - desc
              - asc
            default: desc
          description: 오름차순 내림차순-> desc asc
          required: true
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - name
              - realty_name
              - realty_owner_name
          description: 유저이름, 부동산이름, 부동산대표이름
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: 페이지번호
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'


  /users/userInfo/update:
    post:
      security:
        - BearerAuth: []
      tags:
        - User
      summary: 유저 수정
      description: >
        user create 부분에서 추가 입력한 부분만 update 하는 api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 추가입력 때 입력한 전화번호 ('-' 넣으면 안됨)
                name:
                  type: string
                  description: 추가입력 때 입력한 이름
                realty_name:
                  type: string
                  description: 추가입력 때 입력한 부동산 이름
                realty_address:
                  type: string
                  description: 추가입력 때 입력한 부동산 주소
                realty_owner_name:
                  type: string
                  description: 추가입력 대 입력한 부동산 대표 이름
                realty_owner_phone:
                  type: string
                  description: 추가입력 때 입력한 부동산 대표 전화번호 ('-' 넣으면 안됨)
              required:
                - name
                - phone
                - realty_name
                - realty_address
                - realty_owner_name
                - realty_owner_phone
      responses:
        '200':
          $ref: '#/components/responses/200'

  /users/userInfo/delete/{user_id}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - User
      summary: 유저 삭제 [관리자 전용]
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 400
                  code: 0
                  msg: 아이디가 없음

# === newSale ===================================================================
  /newsale/create:
    post:
      security:
        - BearerAuth: []
      tags:
        - NewSale
      summary: 신규매물 생성
      description: >
        신규매매 생성 api</br>
        접근 권한 : auth 2, auth 3
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contents_name:
                  type: string
                  description: 컨텐츠에 표시될 텍스트, 검색될 때 사용

                contents_type:
                  type: string
                  enum:
                    - preview video
                    - 360 vr
                    - live
                    - market
                  default: preview video
                  description: 영상, 360 vr, 주거, 상가

                local_address:
                  type: string
                  description: 지역명에 대한 정보 저장, ex) 연제구, 부산진구 등등
                thumnail_image:
                  type: string
                  format: binary
                  description: 매물에 대한 대표 이미지 링크
                preview_video_link:
                  type: string
                  format: binary
                  description: 미리보기 영상 로컬링크
                youtube_info_link:
                  type: string
                  description: 안내영상 링크(youtube link)
                youtube_inner_link:
                  type: string
                  description: 내부영상 링크(youtube link)
                vr_link_inner:
                  type: string
                  description: 내부 vr 영상을 위한 링크(youtube link)
                vr_link_outer:
                  type: string
                  description: 외부 vr 영상을 위한 링크(youtube link)
                vr_link_typeA:
                  type: string
                  description: type A vr 링크
                vr_link_typeB:
                  type: string
                  description: type B vr 링크

                vr_image:
                  type: array
                  items:
                    type: string
                    format: binary

                  description: >
                    사진 슬라이드에 들어갈 이미지 로컬링크

                info_image:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 안내자료에 들어갈 이미지 로컬링크

                # 설명 부분
                newsale_info_type:
                  type: number
                  description: 1. 타입
                newsale_info_housenum:
                  type: number
                  description: 2. 총 세대수
                newsale_info_parknum:
                  type: number
                  description: 3. 주차대수
                newsale_info_width:
                  type: number
                  description: 4. 평형대
                newsale_info_price:
                  type: number
                  description: 5. 가격
                newsale_info_perprice:
                  type: number
                  description: 6. 평당가격
                newsale_info_roomnum:
                  type: number
                  description: 7. 방 개수
                newsale_info_bathroomnum:
                  type: number
                  description: 7. 욕실
                newsale_info_option:
                  type: string
                  description: 8. 옵션
                newsale_info_floornum:
                  type: number
                  description: 9. 층수
                newsale_info_etc:
                  type: string
                  description: 10. 기타설명

                kakaomap_info_latitude:
                  type: number

                kakaomap_info_longtitude:
                  type: number
                kakaomap_info_address:
                  type: string

              required:
                - contents_name
                - contents_type
                - local_address
                - thumnail_image
                - preview_video_link
                - youtube_info_link
                - youtube_inner_link
                - vr_link_inner
                - vr_link_outer
                - vr_link_typeA
                - vr_link_typeB
                - vr_image
                - info_image
                - newsale_info_type
                - newsale_info_housenum
                - newsale_info_parknum
                - newsale_info_width
                - newsale_info_price
                - newsale_info_perprice
                - newsale_info_roomnum
                - newsale_info_bathroomnum
                - newsale_info_option
                - newsale_info_floornum
                - newsale_info_etc
                - kakaomap_info_latitude
                - kakaomap_info_longtitude
                - kakaomap_info_address
      responses:
        '200':
            $ref: '#/components/responses/200'

  /newsale/detail/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - NewSale
      summary: 신규매물 상세정보
      description: 매물에 대한 세부 정보 가져오는 api
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 가져올 매물의 id
          required: true
      responses:
        '200':
            $ref: '#/components/responses/200'

  /newsale/search:
    get:
      security:
        - BearerAuth: []
      tags:
        - NewSale
      summary: 신규매물 검색
      description: 검색어를 통한 매물 가져옴(페이지네이션 함)
      parameters:
        - in: query
          name: searchName
          schema:
            type: string
          description: 입력받는 검색어
          required: true
        - in: query
          name: conType
          schema:
            type: string
            enum:
              - preview video
              - 360 vr
              - live
              - markete
          description: 컨텐츠 타입(총 4개)
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: 페이지 번호(첫번째 페이지가 0)
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /newsale/show:
    get:
      security:
        - BearerAuth: []
      tags:
        - NewSale
      summary: 신규매물 15개씩 보여줌
      description: 15개씩 컨텐츠 요약해서 보여주는 api(영상 미리보기 부분)
      parameters:
        - in: query
          name: order
          schema:
            type: string
            enum:
              - desc
              - asc
        - in: query
          name: localCode
          schema:
            type: string
            enum:
              - 2644000000
              - 2641000000
              - 2629000000
              - 2617000000
              - 2626000000
              - 2623000000
              - 2632000000
              - 2653000000
              - 2638000000
              - 2614000000
              - 2650000000
              - 2647000000
              - 2620000000
              - 2611000000
              - 2635000000
              - 2671000000
          description: 강서구, 금정구, 남구, 동구, 동래구, 부산진구, 북구, 사상구, 사하구, 서구, 수영구, 연제구, 영도구, 중구, 해운대구 순서임</br>
            위의 사항을 요청할 떄 front 에서는 지역코드를 노출시키는 게 아니라 지역코드에 해당하는 지역(구) 명을 노출시켜야 함
          required: true
        - in: query
          name: conType
          schema:
            type: string
            enum:
              - preview video
              - 360 vr
              - live
              - market
          description: 4개 중에 1개 선택
          required: true

        - in: query
          name: type
          schema:
            type: string
            enum:
              - views
              - id
          description: type 은 order 의 기준. views 는 조회수순, id 는 최신순
          required: true

        - in: query
          name: pagenum
          schema:
            type: integer
          description: pagination 을 위한 페이지 번호
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /newsale/update/{id}:
    post:
      security:
        - BearerAuth: []
      tags:
        - NewSale
      summary: 신규매물 수정
      description: update 를 하는 api 인데 클라이언트가 직접 데이터를 제공하는 부분은 따로 처리했음</br>
        텍스만 update 하는 api 임
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                contents_name:
                  type: string
                  description:  컨텐츠에 표시될 텍스트, 검색될 때 사용
                contents_type:
                  type: string
                  enum:
                    - preview video
                    - 360 vr
                    - live
                    - marketrs
                  description:  영상, 360 vr, 주거, 상가
                local_address:
                  type: string
                  description:  지역명에 대한 정보 저장, ex) 연제구, 부산진구 등등
                youtube_info_link:
                  type: string
                  description:  안내영상 링크(youtube link)
                youtube_inner_link:
                  type: string
                  description:  내부영상 링크(youtube link)
                vr_link_inner:
                  type: string
                  description:  내부 vr 영상을 위한 링크(youtube link)
                vr_link_outer:
                  type: string
                  description:  외부 vr 영상을 위한 링크(youtube link)
                vr_link_typeA:
                  type: string
                  description:  type A vr 링크
                vr_link_typeB:
                  type: string
                  description:  type B vr 링크

                newsale_info_type:
                  type: integer
                  description:  1. 타입
                newsale_info_housenum:
                  type: integer
                  description:  2. 총 세대수
                newsale_info_parknum:
                  type: integer
                  description:  3. 주차 대수
                newsale_info_width:
                  type: integer
                  description:  4. 평형대
                newsale_info_price:
                  type: integer
                  description:  5. 가격
                newsale_info_perprice:
                  type: integer
                  description:  6. 평당가격
                newsale_info_roomnum:
                  type: integer
                  description:  7. 방 개수
                newsale_info_bathroomnum:
                  type: integer
                  description:  7. 욕실
                newsale_info_option:
                  type: string
                  description:  8. 옵션
                newsale_info_floornum:
                  type: integer
                  description:  9. 층수
                newsale_info_etc:
                  type: string
                  description:  10. 기타설명
                kakaomap_info_latitude:
                  type: string
                  description:  kakaoMap 에서 가져오는 위도
                kakaomap_info_longtitude:
                  type: string
                  description:  kakaoMap 에서 가져오는 경도
                kakaomap_info_address:
                  type: string
                  description:  kakaoMap 에서 가져오는 주소
              required:
                - contents_name
                - contents_type
                - local_address
                - youtube_info_link
                - youtube_inner_link
                - vr_link_inner
                - vr_link_outer
                - vr_link_typeA
                - vr_link_typeB
                - newsale_info_type
                - newsale_info_housenum
                - newsale_info_parknum
                - newsale_info_width
                - newsale_info_price
                - newsale_info_perprice
                - newsale_info_roomnum
                - newsale_info_bathroomnum
                - newsale_info_option
                - newsale_info_floornum
                - newsale_info_etc
                - kakaomap_info_latitude
                - kakaomap_info_longtitude
                - kakaomap_info_address

      responses:
        '200':
            $ref: '#/components/responses/200'

  /newsale/delImg/{id}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - NewSale
      summary: 신규매물 update 에서 사진 지울 때 사용
      description: >
        클라이언트가 S3 에 올린 데이터를 지우고 싶을 때 사용하는 api </br>
        update 에서 로컬에 이미지 업데이트 할 때 먼저 지우기 위한 api
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 지우고 싶은 사진이 존재하는 매물의 id
          required: true
        - in: query
          name: field
          schema:
            type: string
            enum:
              - thumnail_image
              - preview_video_link
              - vr_image
              - info_image
          description: 지우고 싶은 사진이 존재하는 DB 의 칼럼
          required: true
        - in: query
          name: key
          schema:
            type: string
          description: 지우고 싶은 사진의 S3 키값(링크)
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /newsale/upImg:
    post:
      security:
        - BearerAuth: []
      tags:
        - NewSale
      summary: 신규매물 update 에서 사진 다시 등록 할 때 사용
      description: >
        update 에서 로컬에 이미지 올리는 api</br>
        update 에서 처리하는 것을 만들어 두는 거</br>
        이 api 는 사진순서를 배열의 index 로 취급하며 해당 index 를 idx 에 넣으면 그 자리에 사진이 들어감</br>
        **주의 사항 : 반드시 delImg api 를 먼저 요청하고 해당 idx 로 이 api 요청 할 것!**</br>
        접근권한 : auth 2, auth 3
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          description: 사진을 넣을 컨텐츠의 id
          required: true
        - in: query
          name: field
          schema:
            type: string
            enum:
              - thumnail_image
              - preview_video_link
              - vr_image
              - info_image
          description: 수정할 사진의 스키마 칼럼의 이름
          required: true
        - in: query
          name: imgIdx
          schema:
            type: integer
          description: 업데이트할 사진의 index
          required: true

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                thumnail_image:
                  type: string
                  format: binary
                  description: 위의 query 필드에서 받아오는 필드에만 사진 넣을 것
                preview_video_link:
                  type: string
                  format: binary
                  description: 위의 query 필드에서 받아오는 필드에만 사진 넣을 것
                vr_image:
                  type: string
                  format: binary
                  description: 위의 query 필드에서 받아오는 필드에만 사진 넣을 것
                info_image:
                  type: string
                  format: binary
                  description: 위의 query 필드에서 받아오는 필드에만 사진 넣을 것

      responses:
        '200':
          $ref: '#/components/responses/200'

  /newsale/remove/{id}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - NewSale
      summary: 신규매물을 삭제함
      description: >
        컨텐츠를 삭제하는 api</br>

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
            $ref: '#/components/responses/200'
# === interior ===========================================================
  /interior/detail/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Interior
      summary: 인테리어 매물 세부 정보
      description: 매물에 대한 세부 정보 가져오는 api
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 가져올 매물의 id
          required: true
      responses:
        '200':
            $ref: '#/components/responses/200'

  /interior/search:
    get:
      security:
        - BearerAuth: []
      tags:
        - Interior
      summary: 인테리어 매물 페이지네이션
      description: 검색어를 통한 매물 가져옴(페이지네이션 함)
      parameters:
        - in: query
          name: searchName
          schema:
            type: string
          description: 입력받는 검색어
          required: true
        - in: query
          name: conType
          schema:
            type: string
            enum:
              - preview video
              - 360 vr
              - live
              - markete
          description: 컨텐츠 타입(총 4개)
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: 페이지 번호(첫번째 페이지가 0)
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /interior/show:
    get:
      security:
        - BearerAuth: []
      tags:
        - Interior
      summary: 인테리어 페이지네이션으로 매물 보여줌
      description: 15개씩 컨텐츠 요약해서 보여주는 api(영상 미리보기 부분)
      parameters:
        - in: query
          name: order
          schema:
            type: string
            enum:
              - desc
              - asc
        - in: query
          name: localCode
          schema:
            type: string
            enum:
              - 2644000000
              - 2641000000
              - 2629000000
              - 2617000000
              - 2626000000
              - 2623000000
              - 2632000000
              - 2653000000
              - 2638000000
              - 2614000000
              - 2650000000
              - 2647000000
              - 2620000000
              - 2611000000
              - 2635000000
              - 2671000000
          description: 강서구, 금정구, 남구, 동구, 동래구, 부산진구, 북구, 사상구, 사하구, 서구, 수영구, 연제구, 영도구, 중구, 해운대구 순서임</br>
            위의 사항을 요청할 떄 front 에서는 지역코드를 노출시키는 게 아니라 지역코드에 해당하는 지역(구) 명을 노출시켜야 함
          required: true
        - in: query
          name: conType
          schema:
            type: string
            enum:
              - preview video
              - 360 vr
              - live
              - market
          description: 4개 중에 1개 선택
          required: true

        - in: query
          name: type
          schema:
            type: string
            enum:
              - views
              - id
          description: type 은 order 의 기준. views 는 조회수순, id 는 최신순
          required: true

        - in: query
          name: pagenum
          schema:
            type: integer
          description: pagination 을 위한 페이지 번호
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /interior/create:
    post:
      security:
        - BearerAuth: []
      tags:
        - Interior
      summary: 인테리어 매물 생성
      description: >
        인테리어 컨텐츠 생성</br>
        접근권한 : auth 2, auth 3
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contents_name:
                  type: string
                  description: 컨텐츠에 표시될 텍스트
                contents_type:
                  type: string
                  enum:
                    - preview video
                    - 360 vr
                    - live
                    - market
                  default: preview video
                  description: 영상,360 vr, 주거, 상가
                local_address:
                  type: string
                  description: 지역명에 대한 정보 저장, ex) 연제구, 부산진구 등등

                thumnail_image:
                  type: string
                  format: binary
                  description: 대표 이미지 링크

                preview_video_link:
                  type: string
                  format: binary
                  description: 미리보기 영상 로컬링크

                youtube_link:
                  type: string
                  description: 해당 컨텐츠의 유튭 영상
                vr_link_old:
                  type: string
                  description: 시공 전 vr 영상을 위한 링크
                vr_link_new:
                  type: string
                  description: 시공 후 vr 영상을 위한 링크
                construct_time:
                  type: string
                  description: 인테리어/상세보기 부분 공사기간
                construct_cost:
                  type: string
                  description: 인테리어/상세보기 부분 공사비용
                construct_company:
                  type: string
                  description: 인테리어/상세보기 부분 공사업체
                construct_info:
                  type: string
                  description: 엔테리어/상세보기 부분 공사내역

                image_link:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 사진 슬라이드에 들어갈 이미지 로컬링크(1개 이상 가능함)

                interior_info_location:
                  type: string
                  description: 1. 위치
                interior_info_width:
                  type: number
                  description: 2. 평수
                interior_info_period:
                  type: string
                  description: 3. 공사기간
                interior_info_price:
                  type: number
                  description: 4. 비용
                interior_info_history:
                  type: string
                  description : 5. 시공내역
                interior_info_etc:
                  type: string
                  description : 6. 기타설명

                kakaomap_info_latitude:
                  type: number
                  description: 위도(double)
                kakaomap_info_longtitude:
                  type: number
                  description: 경도
                kakaomap_info_address:
                  type: string
                  description: 주소

              required:
                - contents_name
                - contents_type
                - local_address
                - thumnail_image
                - preview_video_link
                - youtube_link
                - vr_link_old
                - vr_link_new
                - construct_time
                - construct_cost
                - construct_company
                - construct_info
                - image_link
                - interior_info_location
                - interior_info_width
                - interior_info_period
                - interior_info_price
                - interior_info_history
                - interior_info_etc
                - kakaomap_info_latitude
                - kakaomap_info_longtitude
                - kakaomap_info_address
      responses:
        '200':
          $ref: '#/components/responses/200'

  /interior/update/{id}:
    post:
      security:
        - BearerAuth: []
      tags:
        - Interior
      summary: 인테리어 매물 수정
      description: 인테리어 매물정보 수정(외부에서 가져오는 이미지를 제외한 사용자가 올리는 자료는 api 분리 해 놓음)
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                contents_name:
                  type: string
                  description: 컨텐츠에 표시될 텍스트
                contents_type:
                  type: string
                  enum:
                    - preview video
                    - 360 vr
                    - live
                    - market
                  default: preview video
                  description: 영상,360 vr, 주거, 상가
                local_address:
                  type: string
                  description: 지역명에 대한 정보 저장, ex) 연제구, 부산진구 등등
                youtube_link:
                  type: string
                  description: 해당 컨텐츠의 유튭 영상
                vr_link_old:
                  type: string
                  description: 시공 전 vr 영상을 위한 링크
                vr_link_new:
                  type: string
                  description: 시공 후 vr 영상을 위한 링크

                construct_time:
                  type: string
                  description: 인테리어/상세보기 부분 공사기간
                construct_cost:
                  type: string
                  description: 인테리어/상세보기 부분 공사비용
                construct_company:
                  type: string
                  description: 인테리어/상세보기 부분 공사업체
                construct_info:
                  type: string
                  description: 엔테리어/상세보기 부분 공사내역

                interior_info_location:
                  type: string
                  description: 1. 위치
                interior_info_width:
                  type: number
                  description: 2. 평수
                interior_info_period:
                  type: string
                  description: 3. 공사기간
                interior_info_price:
                  type: number
                  description: 4. 비용
                interior_info_history:
                  type: string
                  description : 5. 시공내역
                interior_info_etc:
                  type: string
                  description : 6. 기타설명

                kakaomap_info_latitude:
                  type: number
                  description: 위도(double)
                kakaomap_info_longtitude:
                  type: number
                  description: 경도
                kakaomap_info_address:
                  type: string
                  description: 주소

              required:
                - contents_name
                - contents_type
                - local_address
                - youtube_link
                - vr_link_old
                - vr_link_new
                - construct_time
                - construct_cost
                - construct_company
                - construct_info
                - interior_info_location
                - interior_info_width
                - interior_info_period
                - interior_info_price
                - interior_info_history
                - interior_info_etc
                - kakaomap_info_latitude
                - kakaomap_info_longtitude
                - kakaomap_info_address
      responses:
        '200':
          $ref: '#/components/responses/200'

  /interior/upImg:
    post:
      security:
        - BearerAuth: []
      tags:
        - Interior
      summary: 인테리어 매물 수정(로컬에서 올리는 자료 용)
      description: >
        update 에서 로컬에 이미지 올리는 api</br>
        update 에서 처리하는 것을 만들어 두는 거</br>
        **주의 사항 : 반드시 delImg api 를 먼저 요청하고 해당 idx 로 이 api 요청 할 것!**</br>
        접근권한 : auth 2, auth 3
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          description: 사진을 넣을 컨텐츠의 id
          required: true
        - in: query
          name: field
          schema:
            type: string
            enum:
              - thumnail_image
              - preview_video_link
              - image_link
          description: 수정할 사진의 스키마 칼럼의 이름
          required: true
        - in: query
          name: imgIdx
          schema:
            type: integer
          description: 업데이트할 사진의 index
          required: true

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                thumnail_image:
                  type: string
                  format: binary
                  description: 위의 query 필드에서 받아오는 필드에만 사진 넣을 것
                preview_video_link:
                  type: string
                  format: binary
                  description: 위의 query 필드에서 받아오는 필드에만 사진 넣을 것
                image_link:
                  type: string
                  format: binary
                  description: 위의 query 필드에서 받아오는 필드에만 사진 넣을 것

      responses:
        '200':
          $ref: '#/components/responses/200'

  /interior/delImg/{id}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - Interior
      summary: 인테리어 매물 수정에서 로컬 자료 삭제용
      description: >
        클라이언트가 S3 에 올린 데이터를 지우고 싶을 때 사용하는 api </br>
        update 에서 로컬에 이미지 업데이트 할 때 먼저 지우기 위한 api
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 지우고 싶은 사진이 존재하는 매물의 id
          required: true
        - in: query
          name: field
          schema:
            type: string
          description: 지우고 싶은 사진이 존재하는 매물의 필드 값(DB 의 칼럼)
          required: true
        - in: query
          name: key
          schema:
            type: string
            enum:
              - thumnail_image
              - preview_video_link
              - image_link
          description: 지우고 싶은 사진이 존재하는 매물의 키 값(사지의 링크, S3 키값)
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /interior/remove/{id}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - Interior
      summary: 매물 삭제
      description: >
        컨텐츠를 삭제하는 api</br>

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
            $ref: '#/components/responses/200'

# === franchise ==========================================================
  /franchise/detail/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Franchise
      summary: 프렌차이즈 컨텐츠 상세정보
      description: 프렌차이즈 컨텐츠에 대한 모든 DB 자료가 출력되는 api
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 가져올 매물의 db 에서의 id
          required: true
      responses:
        '200':
            $ref: '#/components/responses/200'

  /franchise/search:
    get:
      security:
        - BearerAuth: []
      tags:
        - Franchise
      summary: 검색어를 통한 컨텐츠 노출
      description: 검색어를 통한  컨텐츠 노출 (페이지네이션 포함됨)
      parameters:
        - in: query
          name: searchName
          schema:
            type: string
          description: 검색어
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: 페이지 번호
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /franchise/show:
    get:
      security:
        - BearerAuth: []
      tags:
        - Franchise
      summary: 기본 페이지네이션용 컨텐츠 노출 api
      description: 메뉴바를 통한 기본 페이지네이션 api
      parameters:
        - in: query
          name: order
          schema:
            type: string
            enum:
              - desc
              - asc
            default: desc
          description: 오름차순, 내림차순
          required: true
        - in: query
          name: tag
          schema:
            type: string
            enum:
              - cafe
              - bakery
              - dessert
              - chicken
              - pizza
              - korean
              - chinese
              - japanese
              - special
              - snack
              - fastfood
              - pub
              - convStore
              - sale
              - laundry
              - pcRoom
              - game
              - studyCafe
              - education
              - life
          description: 프랜차이즈 태그</br>
            cafe(카페), bakery(제과제빵) ,dessert(디저트), chicken(치킨), pizza(피자),</br>
            korean(한식), chinese(중식), japanese(일식) ,special(별식, 퓨전요리), snack(분식),</br>
            fastfood(패스트푸드), pub(주점), convStore(편의점), sale(도소매), laundry(빨래방),</br>
            pcRoom(pc방), game(여가, 오락), studyCafe(스터디카페, 독서실), education(교육, 육아), life(생활서비스)
          required: true
        - in: query
          name: type
          schema:
            type: string
            enum:
              - views
              - id
            default: views
          description: views->조회수순</br>id->최신순
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /franchise/create:
    post:
      security:
        - BearerAuth : []
      tags:
        - Franchise
      summary: 프랜차이즈 매물 생성
      description: 프랜차이즈 매물 생성 api</br>접근권한 auth 2, auth 3</br>
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                franchise_name:
                  type: string
                  description: 컨텐츠에 표시될 텍스트, 검색될 이름
                franchise_tag:
                  type: string
                  description: 프론트에서 정해줘야 함 ex) 양식, 중식, 분식 등등
                franchise_logo:
                  type: string
                  format: binary
                  description: franchise 로고

                franchise_storenum:
                  type: integer
                  description:  매장 수
                franchise_cost:
                  type: integer
                  description:  창업 비용
                franchise_monthSale:
                  type: integer
                  description:  월 평균 매출액

                franchise_ceo:
                  type: string
                  description:  대표
                franchise_type:
                  type: string
                  description:  사업자 유형
                franchise_address:
                  type: string
                  description:  주소
                franchise_registnum:
                  type: string
                  description:  사업자등록번호
                franchise_crn:
                  type: string
                  description:  법인등록번호
                franchise_phone:
                  type: string
                  description:  대표 번호
                franchise_fax:
                  type: string
                  description:  대표 팩스 번호
                franchise_detailsale:
                  type: string
                  description:  브랜드 창업 비용

                franchise_month_sales:
                  type: string
                  description:  그래프용 가맹점 연별 월매출 평균
                franchise_market_num:
                  type: string
                  description:  그래프용 가맹점 증가 추이
                franchise_market_contract:
                  type: string
                  description: 그래프용 가맹점 계약 수

                brand_introduce:
                  type: string
                  description:  브랜드 정보 / 브랜드 소개
                brand_menu:
                  type: array
                  items:
                    type: string
                    format: binary
                  description:  브랜드 정보 / 브랜드 대표메뉴(사진 여러개)
                brand_competitiveness:
                  type: string
                  description:  브랜드 정보 / 브랜드 경쟁력(html 로 바로 때려짐)
                brand_video:
                  type: string
                  format: binary
                  description:  브랜드 정보 / 브랜드 홍보영상

                blog_review:
                  type: string
                  description: 블로그 리뷰 링크(iframe 형태)

              required:
                - franchise_name
                - franchise_tag
                - franchise_logo
                - franchise_storenum
                - franchise_cost
                - franchise_monthSale
                - franchise_ceo
                - franchise_type
                - franchise_address
                - franchise_registnum
                - franchise_crn
                - franchise_phone
                - franchise_fax
                - franchise_detailsale
                - franchise_month_sales
                - franchise_market_num
                - franchise_market_contract
                - brand_introduce
                - brand_menu
                - brand_competitiveness
                - brand_video
                - blog_review
      responses:
        '200':
            $ref: '#/components/responses/200'


# === consult ============================================================

  /consult/create/{type}:
    post:
      security:
        - BearerAuth: []
      tags:
        - Consult
      summary: 상담요청
      description: >
        상담요청 api(interior, franchise)</br>
        접근권한 : auth 0 (권한인증 필요 없음)</br>
        type : franchise, interior

      parameters:
        - in: path
          name: type
          schema:
            type: string
            enum:
              - franchise
              - interior
            default: interior
          required: true
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                consult_name:
                  type: string
                  description: 상담의 이름
                consult_req_email:
                  type: string
                  description: 상담 요청한 사람의 이메일
                consult_req_name:
                  type: string
                  description: 상담 요청한 사람의 이름
                consult_req_phone:
                  type: string
                  description: 상담 요청한 사람의 전화번호
                consult_req_sector:
                  type: string
                  description: 상담 요청한 업종 </br></br>**franchise 는 있어야 함**</br>**interior는 없어야 함**</br>interior 에서 consult_req_sector 값을 넣어서 보내게 되면 Bad request 뜸

              required:
                - consult_name
                - consult_req_email
                - consult_req_name
                - consult_req_phone

      responses:
        '200':
          $ref: '#/components/responses/200'

  /consult/createNewSale:
    post:
      security:
        - BearerAuth: []
      tags:
        - Consult
      summary: 상담요청 - 신규매매 회원 전용
      description: >
        상담요청 api(newSale) </br>
        접근권한 : auth 1

      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                consult_name:
                  type: string
                  description: 상담의 이름
                consult_req_email:
                  type: string
                  description: 상담 요청한 사람의 이메일
                consult_req_name:
                  type: string
                  description: 상담 요청한 사람의 이름
                consult_req_phone:
                  type: string
                  description: 상담 요청한 사람의 전화번호
                consult_req_found:
                  type: string
                  description: 상담 요청한 찾는 물건(filter)
              required:
                - consult_name
                - consult_req_email
                - consult_req_name
                - consult_req_phone
                - consult_req_found
      responses:
        '200':
          $ref: '#/components/responses/200'

  /consult/show:
    get:
      security:
        - BearerAuth: []
      tags:
        - Consult
      summary: 요청된 상담 확인
      description: >
        들어온 상담 보여주는 api(interior, franchise)</br>
        접근권한 : auth 2, auth 3
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - interior
              - franchise
              - noFilter
            default : noFilter
          required: true
          description: 1. 인테리어- interior</br>2. 프렌차이즈 - franchise</br>3. all - noFilter</br> noFilter 사용시 newSale 도 출력됨

        - in: query
          name: manager
          schema:
            type: string
            default: noFilter
          required: true
          description: 상담에 대한 담당자

        - in: query
          name: order
          schema:
            type: string
            enum:
              - desc
              - asc
            default: asc
          required: true
          description: 이거는 아직 구현 안됨 구현된다면 초기값은 asc 가 맞음

        - in: query
          name: pagenum
          schema:
            type: integer
            default: 0
          required: true

      responses:
        '200':
          $ref: '#/components/responses/200'

  /consult/showNewSale:
    get:
      security:
        - BearerAuth: []
      tags:
        - Consult
      summary: 상담들 보여줌 - 신규매매, 회원전용
      description: >
        들어온 상담 보여주는 api</br>
        접근권한 : auth 2, auth 3
      parameters:
        - in: query
          name: realtyName
          schema:
            type: string
            default: noFilter
          required: true
          description: 부동산 이름(filter)

        - in: query
          name: found
          schema:
            type: string
            default: noFilter
          required: true
          description: 찾는 물건(filter)

        - in: query
          name: manager
          schema:
            type: string
            default: noFilter
          required: true
          description: 담당자 이름(fliter)

        - in: query
          name: order
          schema:
            type: string
            default: asc
          description: 정렬 기준(현재는 기본값만 존재(asc))

        - in: query
          name: page
          schema:
            type: integer
            default: 0
          required: true
          description: 페이지네이션의 페이지 쪽 숫자

      responses:
        '200':
          $ref: '#/components/responses/200'

  /consult/setManager:
    post:
      security:
        - BearerAuth: []
      tags:
        - Consult
      summary: 매니저 선택
      description: >
        들어온 상담요청에서 매니저 지정해 주는 api</br>
        접근권한 : auth 2
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          description: 상담의 id
          required: true
        - in: query
          name: manager
          schema:
            type: string
          description: 상담을 담당할 담당자
          required: true
      responses:
        '200':
            $ref: '#/components/responses/200'

  /consult/remove/{id}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - Consult
      summary: 상담 삭제
      description: >
        들어온 상담요청 삭제
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
            $ref: '#/components/responses/200'

# === kakaoMap ===========================================================

  /kakaoMap/getAllCode:
    get:
      security:
        - BearerAuth: []
      tags:
        - KakaoMap
      summary: kakao api 를 이용한 지역코드 모두 받아옴
      description: >
        kakao api 사용하여 입력한 지역코드 전체 보여주는 api</br>
        접근권한 : auth 2, auth 3

      responses:
        '200':
            $ref: '#/components/responses/200'

  /kakaoMap/insert:
    post:
      security:
        - BearerAuth: []
      tags:
        - KakaoMap
      summary: kakao api 를 이용한 지역코드 삽입
      description: >
        지역코드 삽입시 아래 사항을 따라야 함</br>
        특별시, 광역시 : **(시) **구</br>
        그 외 시,도 : ***도 **시<br>
        kakaoApi 로 받아온 지역코드 입력 api</br>
        접근권한 : auth 2, auth 3
      parameters:
        - in: query
          name: local
          schema:
            type: string
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

  /kakaoMap/remove/{code}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - KakaoMap
      summary: 삽입된 local 코드 삭제
      description: 지역코드 삭제
      parameters:
        - in: path
          name: code
          schema:
            type: string
          required: true

      responses:
        '200':
            $ref: '#/components/responses/200'

# === components =========================================================
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    '200':
      description: ok
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
            example:
              status: 200

    '400':
      description: bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              msg:
                type: string
            example:
              status: 400
              msg: 잘못된 요청
    '401':
      description: invalid token
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              msg:
                type: string
            example:
              status: 401
              msg: 인증 오류

    '403':
      description: 권한 없음
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              msg:
                type: string
            example:
              status: 403
              msg: 권한 없음

    '500':
      description: 서버 에러
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              msg:
                type: string
            example:
              status: 500
              msg: 서버 에러
